[{"/Users/dejisanusi/Desktop/code/MernBlog/client/src/index.js":"1","/Users/dejisanusi/Desktop/code/MernBlog/client/src/Routes.js":"2","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/Create/Create.jsx":"3","/Users/dejisanusi/Desktop/code/MernBlog/client/src/App.js":"4","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/nav/nav.jsx":"5","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/SinglePost/SinglePost.jsx":"6","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/UpdatePost/UpdatePost.jsx":"7"},{"size":443,"mtime":1607449210252,"results":"8","hashOfConfig":"9"},{"size":708,"mtime":1607466157632,"results":"10","hashOfConfig":"9"},{"size":2353,"mtime":1607466458122,"results":"11","hashOfConfig":"9"},{"size":2276,"mtime":1607467529386,"results":"12","hashOfConfig":"9"},{"size":413,"mtime":1607459459688,"results":"13","hashOfConfig":"9"},{"size":746,"mtime":1607460556163,"results":"14","hashOfConfig":"9"},{"size":2646,"mtime":1607466482921,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"38286k",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/dejisanusi/Desktop/code/MernBlog/client/src/index.js",[],["33","34"],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/Routes.js",[],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/Create/Create.jsx",[],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/App.js",[],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/nav/nav.jsx",[],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/SinglePost/SinglePost.jsx",["35"],"import React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport Nav from '../nav/nav'\n\nconst SinglePost = (props) => {\n    const [post,setPost] = useState('')\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API}/post/${props.match.params.slug}`)\n        .then(response =>setPost(response.data))\n        .catch(error => alert('Error Loading Single Post'))\n\n    },[])\n\n    return(\n        <div>\n            <Nav/>\n            <br/>\n            <h1>{post.title}</h1>\n            <p className=\"lead\">{post.content}</p>\n            <p>Author: {post.user} Published on{' '}\n            {new Date(post.createdAt).toLocaleString()}\n            </p>\n            <br/>\n        </div>\n    )\n}\n\nexport default SinglePost\n","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/UpdatePost/UpdatePost.jsx",["36"],"import React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport Nav from '../nav/nav'\n\nconst UpdatePost = (props) => {\n    const [state, setState] = useState({\n        title:'',\n        content:'',\n        slug:'',\n        user:''\n    })\n\n    const {title,content,slug,user} = state\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API}/post/${props.match.params.slug}`)\n        \n        .then(response =>{\n            const {title, content, slug, user} = response.data\n            setState({...state,title,content,slug,user})\n        })\n        .catch(error => alert('Error Loading Single Post'))\n\n    },[])\n\n    const handleChange = (name) => (event) =>{\n        console.log(\"name\", name,\"event\", event.target.value)\n        setState({...state,[name]:event.target.value})\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        //console.table({title,content,user})\n        axios.put(`${process.env.REACT_APP_API}/post/${slug}`, {title,content,user})\n        .then(response =>{\n            console.log(response)\n            const {title, content, slug, user}= response.data\n            //empty state\n            setState({...state, title, content, slug, user})\n            // show success alert\n            alert(`Post titled ${response.data.title} is Updated`)\n\n        })\n        .catch(error => {\n            console.log(error.response)\n            alert(error.response.data.error)\n        })\n    }\n\n    const showUpdateForm = () =>(\n    <form style={{padding: '100px'}} onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n            <label className=\"text-muted\">Title</label>\n            <input onChange={handleChange('title')} value={title} type=\"text\" className=\"form-control\" placeholder=\"Post title\" required/>\n        </div>\n        <div className=\"form-group row\">\n            <label className=\"text-muted\">Content</label>\n            <textarea onChange={handleChange('content')} value={content} type=\"text\" className=\"form-control\" placeholder=\"Write Something...\" rows=\"50\" required/>\n        </div>\n        <div className=\"form-group row\">\n            <label className=\"text-muted\">User</label>\n            <input onChange={handleChange('user')} value={user} type=\"text\" className=\"form-control\" placeholder=\"Your name\" required/>\n        </div>\n        <div>\n            <button className=\"btn btn-primary\">Update</button>\n        </div>\n    </form>\n    )\n    return(\n        <div>\n            <Nav/>\n            <br/>\n            <h1>UPDATE POST</h1>\n            {showUpdateForm()}\n            <br/>\n        </div>\n    )\n}\n\nexport default UpdatePost",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":13,"column":7,"nodeType":"43","endLine":13,"endColumn":9,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"45","line":24,"column":7,"nodeType":"43","endLine":24,"endColumn":9,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.slug'. Either include it or remove the dependency array.","ArrayExpression",["49"],"React Hook useEffect has missing dependencies: 'props.match.params.slug' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [props.match.params.slug]",{"range":"55","text":"56"},"Update the dependencies array to be: [props.match.params.slug, state]",{"range":"57","text":"58"},[399,401],"[props.match.params.slug]",[641,643],"[props.match.params.slug, state]"]
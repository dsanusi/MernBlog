[{"/Users/dejisanusi/Desktop/code/MernBlog/client/src/index.js":"1","/Users/dejisanusi/Desktop/code/MernBlog/client/src/Routes.js":"2","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/Create/Create.jsx":"3","/Users/dejisanusi/Desktop/code/MernBlog/client/src/App.js":"4","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/nav/nav.jsx":"5","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/SinglePost/SinglePost.jsx":"6","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/UpdatePost/UpdatePost.jsx":"7","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/Login/Login.jsx":"8","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/helpers/helpers.jsx":"9","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/PrivateRoute/PrivateRoute.jsx":"10"},{"size":443,"mtime":1607449210252,"results":"11","hashOfConfig":"12"},{"size":896,"mtime":1607534645009,"results":"13","hashOfConfig":"12"},{"size":3444,"mtime":1607552751305,"results":"14","hashOfConfig":"12"},{"size":2514,"mtime":1607614443982,"results":"15","hashOfConfig":"12"},{"size":935,"mtime":1607556866251,"results":"16","hashOfConfig":"12"},{"size":813,"mtime":1607554407446,"results":"17","hashOfConfig":"12"},{"size":3257,"mtime":1607613820350,"results":"18","hashOfConfig":"12"},{"size":2090,"mtime":1607557142021,"results":"19","hashOfConfig":"12"},{"size":1080,"mtime":1607533245576,"results":"20","hashOfConfig":"12"},{"size":486,"mtime":1607534699659,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"38286k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/dejisanusi/Desktop/code/MernBlog/client/src/index.js",[],["47","48"],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/Routes.js",[],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/Create/Create.jsx",[],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/App.js",[],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/nav/nav.jsx",[],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/SinglePost/SinglePost.jsx",["49"],"import React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport Nav from '../nav/nav'\nimport  renderHTML from 'react-render-html'\nconst SinglePost = (props) => {\n    const [post,setPost] = useState('')\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API}/post/${props.match.params.slug}`)\n        .then(response =>setPost(response.data))\n        .catch(error => alert('Error Loading Single Post'))\n\n    },[])\n\n    return(\n        <div>\n            <Nav/>\n            <br/>\n            <h1>{post.title}</h1>\n            <div className=\"lead\">{renderHTML(post && post.content)}</div>\n            <p>Author: {post.user} Published on{' '}\n            {new Date(post.createdAt).toLocaleString()}\n            </p>\n            <br/>\n        </div>\n    )\n}\n\nexport default SinglePost\n","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/UpdatePost/UpdatePost.jsx",["50","51"],"import React, { useEffect,useState } from 'react'\nimport axios from 'axios'\nimport Nav from '../nav/nav'\nimport ReactQuill from 'react-quill'\nimport {getUser, getToken} from '../helpers/helpers'\nimport 'react-quill/dist/quill.bubble.css'\n\nconst UpdatePost = (props) => {\n    const [state, setState] = useState({\n        title:'',\n        slug:'',\n        user:''\n    })\n\n    const {title,slug,user} = state\n\n    const [content, setContent] = useState('');\n\n    // rich text editor handle change\n    const handleContent = event => {\n        console.log(event);\n        setContent(event);\n    };\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API}/post/${props.match.params.slug}`)\n        \n        .then(response =>{\n            const {title, content, slug, user} = response.data\n            setState({...state,title,slug,user})\n            setContent(content)\n        })\n        .catch(error => alert('Error Loading Single Post'))\n\n    },[])\n\n    const handleChange = (name) => (event) =>{\n        console.log(\"name\", name,\"event\", event.target.value)\n        setState({...state,[name]:event.target.value})\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        //console.table({title,content,user})\n        axios.put(`${process.env.REACT_APP_API}/post/${slug}`, {title,content,user},\n        {\n            headers: {\n                authorization: `Bearer ${getToken()}`\n            }\n        }\n        )\n        .then(response =>{\n            console.log(response)\n            const {title, content, slug, user}= response.data\n            //empty state\n            setState({...state, title, content, slug, user})\n            // show success alert\n            alert(`Post titled ${response.data.title} is Updated`)\n\n        })\n        .catch(error => {\n            console.log(error.response)\n            alert(error.response.data.error)\n        })\n    }\n\n    const showUpdateForm = () =>(\n    <form style={{padding: '100px'}} onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n            <label className=\"text-muted\">Title</label>\n            <input onChange={handleChange('title')} value={title} type=\"text\" className=\"form-control\" placeholder=\"Post title\" required/>\n        </div>\n        <div className=\"form-group row\">\n            <label className=\"text-muted\">Content</label>\n            <ReactQuill\n                        onChange={handleContent}\n                        value={content}\n                        theme=\"bubble\"\n                        className=\"pb-5 mb-3\"\n                        placeholder=\"Write something..\"\n                        style={{ border: '1px solid #666' }}\n                    />\n        </div>\n        <div className=\"form-group row\">\n            <label className=\"text-muted\">User</label>\n            <input onChange={handleChange('user')} value={user} type=\"text\" className=\"form-control\" placeholder=\"Your name\" required/>\n        </div>\n        <div>\n            <button className=\"btn btn-primary\">Update</button>\n        </div>\n    </form>\n    )\n    return(\n        <div>\n            <Nav/>\n            <br/>\n            <h1>UPDATE POST</h1>\n            {showUpdateForm()}\n            <br/>\n        </div>\n    )\n}\n\nexport default UpdatePost","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/Login/Login.jsx",["52"],"import React, {useState,useEffect} from 'react'\nimport axios from 'axios'\nimport {Link, withRouter} from 'react-router-dom'\nimport Nav from '../nav/nav'\n\nimport {authenticate, getUser} from '../helpers/helpers'\nconst Login = (props) => {\n    // creating state\n    const [state,setState]= useState({\n        name: '',\n        password: ''\n    })\n    const {name,password} = state\n\n    useEffect(() => {\n        getUser() && props.history.push('/')\n    })\n\n    const handleChange = (name) => (event) =>{\n        console.log(\"name\", name,\"event\", event.target.value)\n        setState({...state,[name]:event.target.value})\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.table({name,password})\n        axios.post(`${process.env.REACT_APP_API}/login`, {name, password})\n        .then(response =>{\n            console.log(response)\n            // response will contain token and name of user\n            authenticate(response, () =>props.history.push('/create'))\n            // redirect to create page\n\n        })\n        .catch(error => {\n            console.log(error.response)\n            alert(error.response.data.error)\n        })\n    }\n\n    return <div>\n        <Nav/>\n        <br/>\n        <h1>LOGIN</h1>\n        <hr/>\n        <form style={{padding: '100px'}} onSubmit={handleSubmit}>\n                <div className=\"form-group row\">\n                    <label className=\"text-muted\">Name</label>\n                    <input onChange={handleChange('name')} value={name} type=\"text\" className=\"form-control\" placeholder=\"Your Name\" required/>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"text-muted\">Password</label>\n                    <input onChange={handleChange('password')} value={password} type=\"password\" className=\"form-control\" placeholder=\"Your Password\" required/>\n                </div>\n                <div>\n                    <button className=\"btn btn-primary\">Login</button>\n                </div>\n            </form>\n    </div>\n}\n\nexport default withRouter(Login)","/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/helpers/helpers.jsx",[],"/Users/dejisanusi/Desktop/code/MernBlog/client/src/components/PrivateRoute/PrivateRoute.jsx",["53"],"import React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport {getUser} from \"../helpers/helpers\"\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            getUser() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":13,"column":7,"nodeType":"60","endLine":13,"endColumn":9,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":9,"nodeType":"64","messageId":"65","endLine":5,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":35,"column":7,"nodeType":"60","endLine":35,"endColumn":9,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":3,"column":9,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"69","line":1,"column":16,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.slug'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'getUser' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'props.match.params.slug' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["73"],"'Link' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [props.match.params.slug]",{"range":"78","text":"79"},"Update the dependencies array to be: [props.match.params.slug, state]",{"range":"80","text":"81"},[442,444],"[props.match.params.slug]",[957,959],"[props.match.params.slug, state]"]